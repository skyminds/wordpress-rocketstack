# This config file uses nginx fastcgi-cache
fastcgi_cache_path /home/nginx-cache/example levels=1:2 keys_zone=example:100m inactive=60m;

# server on port 80
server {
	listen      80;
	listen      [::]:80;
	server_name _;
	
	# ACME challenge
	include snippets/acme-challenge.conf;

	# Allow Cloudflare Flexible SSL 
	# so the server does not need to decrypt SSL if you so wish
	proxy_set_header X-Forwarded-Host $host;
	proxy_set_header X-Forwarded-Server $host;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-NginX-Proxy true;
	
	# Enforce SSL: change the domain and uncomment once your SSL certficated has been installed
	# Once confirmed the redirect occurs, switch the 302 to 301
	# return 302 https://example.com$request_uri;
	# return 301 https://example.com$request_uri;
}

# server on port 443 (TLS)
server {
	listen      443 ssl http2 default_server;
	listen      [::]:443 ssl http2 default_server ;
	server_name _;

	# root folder to serve files
	root /home/www/wprocketstack;

	# Index file, prioritized
	index index.php index.html index.htm;

	# access_log /var/log/nginx/rocketstack_ssl_access.log;
	error_log /var/log/nginx/wprocketstack_ssl_error.log;

	# once your SSL certificates are generated, alter the paths below to reflect your domain 
	# and uncomment the lines
	# ssl_certificate           /etc/letsencrypt/live/example.com/fullchain.pem;
	# ssl_certificate_key       /etc/letsencrypt/live/example.com/privkey.pem;

	# Exclusions
	include snippets/exclusions.conf;

	# SSL
	include snippets/ssl.conf;

	# Security
	include snippets/security.conf;

	# Static Content
	include snippets/static-files.conf;

	# Fastcgi cache rules
	include snippets/fastcgi-cache.conf;

	# Limits
	include snippets/limits.conf;

	# Cloudflare
	include snippets/nginx-cloudflare.conf;

	# Gzip
	include snippets/gzip.conf;

	# MIME types
	include snippets/mime-types.conf;

	# WEBP + AVIF
	include snippets/webp-avif.conf;

	# CORS
	include snippets/cors.conf;
	# add_header Access-Control-Allow-Origin "https://$server_name";

	# Custom redirects
	# Very useful converter : https://timmehosting.de/htaccess-converter
	# 301 from APACHE
	#include /home/www/example/nginx301.conf;

	# Transmission + Icecast
	# include snippets/transmission.conf;

	location / {
		try_files $uri $uri/ /index.php?$args;
	}

	location ~ \.php$ {
		try_files $uri =404;

		# Fast-CGI params
		include snippets/fastcgi-params.conf;

		# PHP 7.4
		fastcgi_pass unix:/run/php/php8.0-fpm.sock;
		# PHP 8.0
		# fastcgi_pass unix:/run/php/php8.0-fpm.sock;

		# Skip cache based on rules in snippets/fastcgi-cache.conf
		fastcgi_cache_bypass $skip_cache;
		fastcgi_no_cache $skip_cache;

		# Define memory zone for caching, should match line 2
		fastcgi_cache example;

		# Define caching time
		fastcgi_cache_valid 60m;
		# Increase timeouts
		fastcgi_read_timeout 6000;
		fastcgi_connect_timeout 6000;
		fastcgi_send_timeout 6000;
		proxy_read_timeout 6000;
		proxy_connect_timeout 6000;
		proxy_send_timeout 6000;
		send_timeout 6000;

		# Allow Cloudflare Flexible SSL 
		# so the server does not need to decrypt SSL if you so wish
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto https;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-NginX-Proxy true;
	}
	
	# Protect WooCommerce downloads
	# note: must be at the bottom of the server directive
	include snippets/woocommerce.conf;
}

# Expires map
map $sent_http_content_type $expires {
	default                    off;
	text/html                  epoch;
	text/css                   max;
	application/javascript     max;
	~image/                    max;
}

# WEBP
map $http_accept $webp_suffix {
	default "";
	"~*webp" ".webp";
	"~image/webp"  ".webp";
}
# AVIF
map $http_accept $avif_suffix {
	default "";
	"~image/avif"  ".avif";
}

# Add Access-Control-Allow-Origin.
# h5bp/cross-origin/requests.conf
map $sent_http_content_type $cors {
	# Images
	~*image/ "*";

	# Web fonts
	~*font/                         "*";
	~*application/vnd.ms-fontobject "*";
	~*application/x-font-ttf        "*";
	~*application/font-woff         "*";
	~*application/x-font-woff       "*";
	~*application/font-woff2        "*";

	# PDF
	~*application/pdf        "*";
}

# Transmission
#upstream transmission {
#    server 127.0.0.1:9091;
#    keepalive 4;
#}

# Icecast webradio
#upstream thunderstruck {
#    server 127.0.0.1:8000;
#    keepalive 4;
#}